{"version":3,"file":"pp-breadcrumbs.js","sources":["../../../projects/pp-breadcrumbs/src/lib/breadcrumbs.resolver.ts","../../../projects/pp-breadcrumbs/src/lib/breadcrumbs.service.ts","../../../projects/pp-breadcrumbs/src/lib/breadcrumbs.component.ts","../../../projects/pp-breadcrumbs/src/lib/breadcrumbs.module.ts","../../../projects/pp-breadcrumbs/src/public_api.ts","../../../projects/pp-breadcrumbs/src/pp-breadcrumbs.ts"],"sourcesContent":["import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, UrlSegment} from '@angular/router';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Breadcrumb} from './breadcrumb';\r\nimport {Injectable} from '@angular/core';\r\nimport {template} from 'lodash';\r\n\r\n@Injectable()\r\nexport class PpBreadcrumbsResolver implements Resolve<Breadcrumb[]> {\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Breadcrumb[]> | Promise<Breadcrumb[]> | Breadcrumb[] {\r\n    const data = route.routeConfig.data;\r\n    const path = this.getFullPath(route);\r\n    const rawText = typeof data.breadcrumbs === 'string' ? data.breadcrumbs : data.breadcrumbs.text || data.text || path;\r\n\r\n    return of([\r\n      {\r\n        path: path,\r\n        text: this.stringFormat(rawText, route.data)\r\n      }\r\n    ]);\r\n  }\r\n\r\n  protected getFullPath(route: ActivatedRouteSnapshot): string {\r\n    const relativePath = (segments: UrlSegment[]) => segments.reduce((a, v) => (a += '/' + v.path), '');\r\n    const fullPath = (routes: ActivatedRouteSnapshot[]) => routes.reduce((a, v) => (a += relativePath(v.url)), '');\r\n    return fullPath(route.pathFromRoot);\r\n  }\r\n\r\n  protected stringFormat(templateString: string, binding: any): string {\r\n    const compiled = template(templateString, { interpolate: /{{(.+?)}}/g });\r\n    return compiled(binding);\r\n  }\r\n}\r\n","import {Injectable, Injector, OnDestroy, Type} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, NavigationEnd, Router} from '@angular/router';\r\nimport {BehaviorSubject, concat, from, isObservable, Observable, of, Subscription} from 'rxjs';\r\n\r\nimport {PpBreadcrumbsResolver} from './breadcrumbs.resolver';\r\nimport {concatMap, distinct, filter, first, mergeMap, tap, toArray} from 'rxjs/operators';\r\nimport {Breadcrumb} from './breadcrumb';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PpBreadcrumbsService implements OnDestroy {\r\n\r\n  postProcess: (crumbs: Breadcrumb[]) => Promise<Breadcrumb[]> | Observable<Breadcrumb[]> | Breadcrumb[];\r\n\r\n  protected breadcrumbs = new BehaviorSubject<Breadcrumb[]>([]);\r\n  protected defaultResolver = new PpBreadcrumbsResolver();\r\n  protected subscription?: Subscription;\r\n\r\n  get crumbs$(): Observable<Breadcrumb[]> {\r\n    return this.breadcrumbs.asObservable();\r\n  }\r\n\r\n  constructor(protected router: Router, protected injector: Injector) {\r\n    this.subscription = this.router.events.pipe(\r\n      filter(x => x instanceof NavigationEnd),\r\n      concatMap(() => this.onNavigationEnd())\r\n    ).subscribe();\r\n\r\n    this.onNavigationEnd().subscribe();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription?.unsubscribe();\r\n    this.breadcrumbs.complete();\r\n  }\r\n\r\n  protected onNavigationEnd() {\r\n    return this.resolveCrumbs(this.router.routerState.snapshot.root).pipe(\r\n      mergeMap((breadcrumbs) => breadcrumbs),\r\n      distinct((breadcrumb) => breadcrumb.text),\r\n      toArray(),\r\n      mergeMap((breadcrumbs) => {\r\n        return this.postProcess ? this.wrapIntoObservable(this.postProcess(breadcrumbs)).pipe(first()) : of(breadcrumbs);\r\n      }),\r\n      tap((breadcrumbs) => this.breadcrumbs.next(breadcrumbs))\r\n    );\r\n  }\r\n\r\n  protected resolveCrumbs(route: ActivatedRouteSnapshot): Observable<Breadcrumb[]> {\r\n    let crumbs$: Observable<Breadcrumb[]> = of([]);\r\n    const data = route.routeConfig?.data;\r\n\r\n    if (data?.breadcrumbs) {\r\n      const resolver = this.getBreadcrumbResolver(data.breadcrumbs);\r\n      const result = resolver.resolve(route, this.router.routerState.snapshot);\r\n      crumbs$ = this.wrapIntoObservable(result).pipe(first());\r\n    }\r\n\r\n    return route.firstChild ? concat(crumbs$, this.resolveCrumbs(route.firstChild)) : crumbs$;\r\n  }\r\n\r\n  protected getBreadcrumbResolver(breadcrumbs: string | Type<PpBreadcrumbsResolver>): PpBreadcrumbsResolver {\r\n    return typeof breadcrumbs === 'function' && breadcrumbs.prototype instanceof PpBreadcrumbsResolver\r\n      ? this.injector.get<PpBreadcrumbsResolver>(breadcrumbs)\r\n      : this.defaultResolver;\r\n  }\r\n\r\n  protected wrapIntoObservable<T>(value: T | Promise<T> | Observable<T>): Observable<T> {\r\n    return isObservable(value) ? value : from(Promise.resolve(value));\r\n  }\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {Breadcrumb} from './breadcrumb';\r\nimport {PpBreadcrumbsService} from './breadcrumbs.service';\r\n\r\n@Component({\r\n  selector: 'pp-breadcrumbs',\r\n  templateUrl: './breadcrumbs.component.html',\r\n  styleUrls: ['./breadcrumbs.component.scss']\r\n})\r\nexport class PpBreadcrumbsComponent implements OnInit, OnDestroy {\r\n  crumbs: Breadcrumb[];\r\n\r\n  protected subscription?: Subscription;\r\n\r\n  constructor(protected service: PpBreadcrumbsService) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.subscription = this.service.crumbs$.subscribe((crumbs) => {\r\n      this.crumbs = crumbs;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription?.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport { PpBreadcrumbsComponent } from './breadcrumbs.component';\r\n\r\n@NgModule({\r\n  declarations: [PpBreadcrumbsComponent],\r\n  imports: [CommonModule, RouterModule],\r\n  exports: [PpBreadcrumbsComponent]\r\n})\r\nexport class PpBreadcrumbsModule { }\r\n","/*\r\n * Public API Surface of pp-breadcrumbs\r\n */\r\n\r\nexport * from './lib/breadcrumb';\r\nexport * from './lib/breadcrumbs.service';\r\nexport * from './lib/breadcrumbs.component';\r\nexport * from './lib/breadcrumbs.resolver';\r\nexport * from './lib/breadcrumbs.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}